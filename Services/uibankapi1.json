{
  "namespace": "uibankapi1",
  "webDocumentUri": "https://uibank-api.uipath.com/explorer/swagger.json",
  "serviceType": "Swagger",
  "operations": [
    "account.prototype.__get__transactions",
    "account.create",
    "account.find",
    "account.findById",
    "account.replaceById__put_accounts_{id}",
    "account.deleteById",
    "account.replaceById__post_accounts_{id}_replace",
    "account.updateAll",
    "account.count",
    "address.create",
    "address.find",
    "address.findById",
    "address.replaceById__put_addresses_{id}",
    "address.deleteById",
    "address.replaceById__post_addresses_{id}_replace",
    "address.updateAll",
    "address.count",
    "user.prototype.__findById__accessTokens",
    "user.prototype.__destroyById__accessTokens",
    "user.prototype.__updateById__accessTokens",
    "user.prototype.__findById__accounts",
    "user.prototype.__destroyById__accounts",
    "user.prototype.__updateById__accounts",
    "user.prototype.__findById__addresses",
    "user.prototype.__destroyById__addresses",
    "user.prototype.__updateById__addresses",
    "user.prototype.__get__accessTokens",
    "user.prototype.__create__accessTokens",
    "user.prototype.__delete__accessTokens",
    "user.prototype.__count__accessTokens",
    "user.prototype.__get__accounts",
    "user.prototype.__create__accounts",
    "user.prototype.__delete__accounts",
    "user.prototype.__count__accounts",
    "user.prototype.__get__addresses",
    "user.prototype.__create__addresses",
    "user.prototype.__delete__addresses",
    "user.prototype.__count__addresses",
    "user.create",
    "user.patchOrCreate",
    "user.replaceOrCreate__put_users",
    "user.find",
    "user.replaceOrCreate__post_users_replaceOrCreate",
    "user.upsertWithWhere",
    "user.exists__get_users_{id}_exists",
    "user.exists__head_users_{id}",
    "user.findById",
    "user.replaceById__put_users_{id}",
    "user.deleteById",
    "user.prototype.patchAttributes",
    "user.replaceById__post_users_{id}_replace",
    "user.findOne",
    "user.updateAll",
    "user.count",
    "user.createChangeStream__post_users_change-stream",
    "user.createChangeStream__get_users_change-stream",
    "user.login",
    "user.logout",
    "user.prototype.verify",
    "user.confirm",
    "user.resetPassword",
    "user.changePassword",
    "user.setPassword",
    "transaction.create",
    "transaction.find",
    "transaction.findById",
    "transaction.replaceById__put_transactions_{id}",
    "transaction.deleteById",
    "transaction.replaceById__post_transactions_{id}_replace",
    "transaction.updateAll",
    "transaction.count",
    "quote.findById",
    "quote.replaceById__put_quotes_{id}",
    "quote.deleteById",
    "quote.replaceById__post_quotes_{id}_replace",
    "quote.find",
    "quote.count",
    "quote.newquote"
  ],
  "rawDocument": "{\r\n  \"swagger\": \"2.0\",\r\n  \"info\": {\r\n    \"title\": \"uibankapi\",\r\n    \"description\": \"UiBank API\",\r\n    \"version\": \"2021.01.0\"\r\n  },\r\n  \"host\": \"\",\r\n  \"basePath\": \"/api\",\r\n  \"consumes\": [\r\n    \"application/json\",\r\n    \"application/x-www-form-urlencoded\",\r\n    \"application/xml\",\r\n    \"text/xml\"\r\n  ],\r\n  \"produces\": [\r\n    \"application/json\",\r\n    \"application/xml\",\r\n    \"text/xml\",\r\n    \"application/javascript\",\r\n    \"text/javascript\"\r\n  ],\r\n  \"paths\": {\r\n    \"/accounts/{id}/transactions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"account\"\r\n        ],\r\n        \"summary\": \"Queries transactions of account.\",\r\n        \"operationId\": \"account.prototype.__get__transactions\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"account id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/transaction\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/accounts\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"account\"\r\n        ],\r\n        \"summary\": \"Create a new instance of the model and persist it into the data source.\",\r\n        \"operationId\": \"account.create\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/$new_account\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/account\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"account\"\r\n        ],\r\n        \"summary\": \"Find all instances of the model matched by filter from the data source.\",\r\n        \"operationId\": \"account.find\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\\\"where\\\":{\\\"something\\\":\\\"value\\\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/account\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/accounts/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"account\"\r\n        ],\r\n        \"summary\": \"Find a model instance by {{id}} from the data source.\",\r\n        \"operationId\": \"account.findById\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter defining fields and include - must be a JSON-encoded string ({\\\"something\\\":\\\"value\\\"})\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/account\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"account\"\r\n        ],\r\n        \"summary\": \"Replace attributes for a model instance and persist it into the data source.\",\r\n        \"operationId\": \"account.replaceById__put_accounts_{id}\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/account\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/account\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"account\"\r\n        ],\r\n        \"summary\": \"Delete a model instance by {{id}} from the data source.\",\r\n        \"operationId\": \"account.deleteById\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/accounts/{id}/replace\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"account\"\r\n        ],\r\n        \"summary\": \"Replace attributes for a model instance and persist it into the data source.\",\r\n        \"operationId\": \"account.replaceById__post_accounts_{id}_replace\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/account\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/account\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/accounts/update\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"account\"\r\n        ],\r\n        \"summary\": \"Update instances of the model matched by {{where}} from the data source.\",\r\n        \"operationId\": \"account.updateAll\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"An object of model property name/value pairs\",\r\n            \"schema\": {\r\n              \"description\": \"An object of model property name/value pairs\",\r\n              \"$ref\": \"#/definitions/account\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"description\": \"Information related to the outcome of the operation\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"description\": \"The number of instances updated\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/accounts/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"account\"\r\n        ],\r\n        \"summary\": \"Count instances of the model matched by where from the data source.\",\r\n        \"operationId\": \"account.count\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/addresses\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"address\"\r\n        ],\r\n        \"summary\": \"Create a new instance of the model and persist it into the data source.\",\r\n        \"operationId\": \"address.create\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/$new_address\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/address\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"address\"\r\n        ],\r\n        \"summary\": \"Find all instances of the model matched by filter from the data source.\",\r\n        \"operationId\": \"address.find\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\\\"where\\\":{\\\"something\\\":\\\"value\\\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/address\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/addresses/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"address\"\r\n        ],\r\n        \"summary\": \"Find a model instance by {{id}} from the data source.\",\r\n        \"operationId\": \"address.findById\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter defining fields and include - must be a JSON-encoded string ({\\\"something\\\":\\\"value\\\"})\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/address\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"address\"\r\n        ],\r\n        \"summary\": \"Replace attributes for a model instance and persist it into the data source.\",\r\n        \"operationId\": \"address.replaceById__put_addresses_{id}\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/address\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/address\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"address\"\r\n        ],\r\n        \"summary\": \"Delete a model instance by {{id}} from the data source.\",\r\n        \"operationId\": \"address.deleteById\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/addresses/{id}/replace\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"address\"\r\n        ],\r\n        \"summary\": \"Replace attributes for a model instance and persist it into the data source.\",\r\n        \"operationId\": \"address.replaceById__post_addresses_{id}_replace\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/address\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/address\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/addresses/update\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"address\"\r\n        ],\r\n        \"summary\": \"Update instances of the model matched by {{where}} from the data source.\",\r\n        \"operationId\": \"address.updateAll\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"An object of model property name/value pairs\",\r\n            \"schema\": {\r\n              \"description\": \"An object of model property name/value pairs\",\r\n              \"$ref\": \"#/definitions/address\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"description\": \"Information related to the outcome of the operation\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"description\": \"The number of instances updated\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/addresses/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"address\"\r\n        ],\r\n        \"summary\": \"Count instances of the model matched by where from the data source.\",\r\n        \"operationId\": \"address.count\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/accessTokens/{fk}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Find a related item by id for accessTokens.\",\r\n        \"operationId\": \"user.prototype.__findById__accessTokens\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"fk\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Foreign key for accessTokens\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/AccessToken\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Delete a related item by id for accessTokens.\",\r\n        \"operationId\": \"user.prototype.__destroyById__accessTokens\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"fk\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Foreign key for accessTokens\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Update a related item by id for accessTokens.\",\r\n        \"operationId\": \"user.prototype.__updateById__accessTokens\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"fk\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Foreign key for accessTokens\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/AccessToken\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/AccessToken\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/accounts/{fk}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Find a related item by id for accounts.\",\r\n        \"operationId\": \"user.prototype.__findById__accounts\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"fk\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Foreign key for accounts\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/account\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Delete a related item by id for accounts.\",\r\n        \"operationId\": \"user.prototype.__destroyById__accounts\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"fk\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Foreign key for accounts\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Update a related item by id for accounts.\",\r\n        \"operationId\": \"user.prototype.__updateById__accounts\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"fk\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Foreign key for accounts\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/account\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/account\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/addresses/{fk}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Find a related item by id for addresses.\",\r\n        \"operationId\": \"user.prototype.__findById__addresses\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"fk\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Foreign key for addresses\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/address\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Delete a related item by id for addresses.\",\r\n        \"operationId\": \"user.prototype.__destroyById__addresses\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"fk\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Foreign key for addresses\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Update a related item by id for addresses.\",\r\n        \"operationId\": \"user.prototype.__updateById__addresses\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"fk\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Foreign key for addresses\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/address\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/address\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/accessTokens\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Queries accessTokens of user.\",\r\n        \"operationId\": \"user.prototype.__get__accessTokens\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/AccessToken\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Creates a new instance in accessTokens of this model.\",\r\n        \"operationId\": \"user.prototype.__create__accessTokens\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/AccessToken\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/AccessToken\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Deletes all accessTokens of this model.\",\r\n        \"operationId\": \"user.prototype.__delete__accessTokens\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/accessTokens/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Counts accessTokens of user.\",\r\n        \"operationId\": \"user.prototype.__count__accessTokens\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/accounts\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Queries accounts of user.\",\r\n        \"operationId\": \"user.prototype.__get__accounts\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/account\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Creates a new instance in accounts of this model.\",\r\n        \"operationId\": \"user.prototype.__create__accounts\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/$new_account\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/account\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Deletes all accounts of this model.\",\r\n        \"operationId\": \"user.prototype.__delete__accounts\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/accounts/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Counts accounts of user.\",\r\n        \"operationId\": \"user.prototype.__count__accounts\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/addresses\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Queries addresses of user.\",\r\n        \"operationId\": \"user.prototype.__get__addresses\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/address\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Creates a new instance in addresses of this model.\",\r\n        \"operationId\": \"user.prototype.__create__addresses\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/$new_address\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/address\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Deletes all addresses of this model.\",\r\n        \"operationId\": \"user.prototype.__delete__addresses\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/addresses/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Counts addresses of user.\",\r\n        \"operationId\": \"user.prototype.__count__addresses\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Create a new instance of the model and persist it into the data source.\",\r\n        \"operationId\": \"user.create\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/$new_user\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"patch\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Patch an existing model instance or insert a new one into the data source.\",\r\n        \"operationId\": \"user.patchOrCreate\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Replace an existing model instance or insert a new one into the data source.\",\r\n        \"operationId\": \"user.replaceOrCreate__put_users\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Find all instances of the model matched by filter from the data source.\",\r\n        \"operationId\": \"user.find\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\\\"where\\\":{\\\"something\\\":\\\"value\\\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/user\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/replaceOrCreate\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Replace an existing model instance or insert a new one into the data source.\",\r\n        \"operationId\": \"user.replaceOrCreate__post_users_replaceOrCreate\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/upsertWithWhere\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Update an existing model instance or insert a new one into the data source based on the where criteria.\",\r\n        \"operationId\": \"user.upsertWithWhere\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"An object of model property name/value pairs\",\r\n            \"schema\": {\r\n              \"description\": \"An object of model property name/value pairs\",\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/exists\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Check whether a model instance exists in the data source.\",\r\n        \"operationId\": \"user.exists__get_users_{id}_exists\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"exists\": {\r\n                  \"type\": \"boolean\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}\": {\r\n      \"head\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Check whether a model instance exists in the data source.\",\r\n        \"operationId\": \"user.exists__head_users_{id}\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"exists\": {\r\n                  \"type\": \"boolean\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Find a model instance by {{id}} from the data source.\",\r\n        \"operationId\": \"user.findById\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter defining fields and include - must be a JSON-encoded string ({\\\"something\\\":\\\"value\\\"})\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Replace attributes for a model instance and persist it into the data source.\",\r\n        \"operationId\": \"user.replaceById__put_users_{id}\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Delete a model instance by {{id}} from the data source.\",\r\n        \"operationId\": \"user.deleteById\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"patch\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Patch attributes for a model instance and persist it into the data source.\",\r\n        \"operationId\": \"user.prototype.patchAttributes\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"An object of model property name/value pairs\",\r\n            \"schema\": {\r\n              \"description\": \"An object of model property name/value pairs\",\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/replace\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Replace attributes for a model instance and persist it into the data source.\",\r\n        \"operationId\": \"user.replaceById__post_users_{id}_replace\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/findOne\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Find first instance of the model matched by filter from the data source.\",\r\n        \"operationId\": \"user.findOne\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\\\"where\\\":{\\\"something\\\":\\\"value\\\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/update\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Update instances of the model matched by {{where}} from the data source.\",\r\n        \"operationId\": \"user.updateAll\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"An object of model property name/value pairs\",\r\n            \"schema\": {\r\n              \"description\": \"An object of model property name/value pairs\",\r\n              \"$ref\": \"#/definitions/user\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"description\": \"Information related to the outcome of the operation\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"description\": \"The number of instances updated\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Count instances of the model matched by where from the data source.\",\r\n        \"operationId\": \"user.count\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/change-stream\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Create a change stream.\",\r\n        \"operationId\": \"user.createChangeStream__post_users_change-stream\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"options\",\r\n            \"in\": \"formData\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"file\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Create a change stream.\",\r\n        \"operationId\": \"user.createChangeStream__get_users_change-stream\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"options\",\r\n            \"in\": \"query\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"file\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/login\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Login a user with username/email and password.\",\r\n        \"operationId\": \"user.login\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"credentials\",\r\n            \"in\": \"body\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"object\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"include\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Related objects to include in the response. See the description of return value for more details.\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"description\": \"The response body contains properties of the AccessToken created on login.\\nDepending on the value of `include` parameter, the body may contain additional properties:\\n\\n  - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\\n\\n\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/logout\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Logout a user with access token.\",\r\n        \"operationId\": \"user.logout\",\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/{id}/verify\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Trigger user's identity verification with configured verifyOptions\",\r\n        \"operationId\": \"user.prototype.verify\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"user id\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/confirm\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Confirm a user registration with identity verification token.\",\r\n        \"operationId\": \"user.confirm\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"uid\",\r\n            \"in\": \"query\",\r\n            \"required\": true\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"token\",\r\n            \"in\": \"query\",\r\n            \"required\": true\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"redirect\",\r\n            \"in\": \"query\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/reset\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Reset password for a user with email.\",\r\n        \"operationId\": \"user.resetPassword\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"options\",\r\n            \"in\": \"body\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"object\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/change-password\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Change a user's password.\",\r\n        \"operationId\": \"user.changePassword\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"oldPassword\",\r\n            \"in\": \"formData\",\r\n            \"required\": true\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"newPassword\",\r\n            \"in\": \"formData\",\r\n            \"required\": true\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/users/reset-password\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Reset user's password via a password-reset token.\",\r\n        \"operationId\": \"user.setPassword\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"newPassword\",\r\n            \"in\": \"formData\",\r\n            \"required\": true\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"Request was successful\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/transactions\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"transaction\"\r\n        ],\r\n        \"summary\": \"Create a new instance of the model and persist it into the data source.\",\r\n        \"operationId\": \"transaction.create\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/$new_transaction\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/transaction\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"transaction\"\r\n        ],\r\n        \"summary\": \"Find all instances of the model matched by filter from the data source.\",\r\n        \"operationId\": \"transaction.find\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\\\"where\\\":{\\\"something\\\":\\\"value\\\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/transaction\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/transactions/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"transaction\"\r\n        ],\r\n        \"summary\": \"Find a model instance by {{id}} from the data source.\",\r\n        \"operationId\": \"transaction.findById\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter defining fields and include - must be a JSON-encoded string ({\\\"something\\\":\\\"value\\\"})\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/transaction\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"transaction\"\r\n        ],\r\n        \"summary\": \"Replace attributes for a model instance and persist it into the data source.\",\r\n        \"operationId\": \"transaction.replaceById__put_transactions_{id}\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/transaction\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/transaction\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"transaction\"\r\n        ],\r\n        \"summary\": \"Delete a model instance by {{id}} from the data source.\",\r\n        \"operationId\": \"transaction.deleteById\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/transactions/{id}/replace\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"transaction\"\r\n        ],\r\n        \"summary\": \"Replace attributes for a model instance and persist it into the data source.\",\r\n        \"operationId\": \"transaction.replaceById__post_transactions_{id}_replace\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/transaction\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/transaction\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/transactions/update\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"transaction\"\r\n        ],\r\n        \"summary\": \"Update instances of the model matched by {{where}} from the data source.\",\r\n        \"operationId\": \"transaction.updateAll\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"An object of model property name/value pairs\",\r\n            \"schema\": {\r\n              \"description\": \"An object of model property name/value pairs\",\r\n              \"$ref\": \"#/definitions/transaction\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"description\": \"Information related to the outcome of the operation\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"description\": \"The number of instances updated\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/transactions/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"transaction\"\r\n        ],\r\n        \"summary\": \"Count instances of the model matched by where from the data source.\",\r\n        \"operationId\": \"transaction.count\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/quotes/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"quote\"\r\n        ],\r\n        \"summary\": \"Find a model instance by {{id}} from the data source.\",\r\n        \"operationId\": \"quote.findById\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter defining fields and include - must be a JSON-encoded string ({\\\"something\\\":\\\"value\\\"})\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/quote\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"quote\"\r\n        ],\r\n        \"summary\": \"Replace attributes for a model instance and persist it into the data source.\",\r\n        \"operationId\": \"quote.replaceById__put_quotes_{id}\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/quote\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/quote\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"quote\"\r\n        ],\r\n        \"summary\": \"Delete a model instance by {{id}} from the data source.\",\r\n        \"operationId\": \"quote.deleteById\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/quotes/{id}/replace\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"quote\"\r\n        ],\r\n        \"summary\": \"Replace attributes for a model instance and persist it into the data source.\",\r\n        \"operationId\": \"quote.replaceById__post_quotes_{id}_replace\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"description\": \"Model id\",\r\n            \"format\": \"JSON\"\r\n          },\r\n          {\r\n            \"name\": \"data\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Model instance data\",\r\n            \"schema\": {\r\n              \"description\": \"Model instance data\",\r\n              \"$ref\": \"#/definitions/quote\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/quote\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/quotes\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"quote\"\r\n        ],\r\n        \"summary\": \"Find all instances of the model matched by filter from the data source.\",\r\n        \"operationId\": \"quote.find\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"filter\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\\\"where\\\":{\\\"something\\\":\\\"value\\\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/quote\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/quotes/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"quote\"\r\n        ],\r\n        \"summary\": \"Count instances of the model matched by where from the data source.\",\r\n        \"operationId\": \"quote.count\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"where\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Criteria to match model instances\",\r\n            \"format\": \"JSON\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"count\": {\r\n                  \"type\": \"number\",\r\n                  \"format\": \"double\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/quotes/newquote\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"quote\"\r\n        ],\r\n        \"summary\": \"get new quote\",\r\n        \"operationId\": \"quote.newquote\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"number\",\r\n            \"name\": \"amount\",\r\n            \"in\": \"formData\",\r\n            \"required\": true,\r\n            \"description\": \"Loan amount requested\",\r\n            \"format\": \"double\"\r\n          },\r\n          {\r\n            \"type\": \"number\",\r\n            \"name\": \"term\",\r\n            \"in\": \"formData\",\r\n            \"required\": true,\r\n            \"description\": \"term for the loan\",\r\n            \"format\": \"double\"\r\n          },\r\n          {\r\n            \"type\": \"number\",\r\n            \"name\": \"income\",\r\n            \"in\": \"formData\",\r\n            \"required\": true,\r\n            \"description\": \"Users current income\",\r\n            \"format\": \"double\"\r\n          },\r\n          {\r\n            \"type\": \"number\",\r\n            \"name\": \"age\",\r\n            \"in\": \"formData\",\r\n            \"required\": true,\r\n            \"description\": \"Users current age\",\r\n            \"format\": \"double\"\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"email\",\r\n            \"in\": \"formData\",\r\n            \"description\": \"Email Address\",\r\n            \"default\": \"\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Request was successful\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"accepted\": {\r\n                  \"type\": \"boolean\",\r\n                  \"description\": \"rate\"\r\n                },\r\n                \"rate\": {\r\n                  \"type\": \"number\",\r\n                  \"description\": \"The accepted rate\",\r\n                  \"format\": \"double\"\r\n                },\r\n                \"quoteid\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The quote id for reference\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"definitions\": {\r\n    \"x-any\": {},\r\n    \"transaction\": {\r\n      \"required\": [\r\n        \"type\",\r\n        \"amount\",\r\n        \"dispute\"\r\n      ],\r\n      \"properties\": {\r\n        \"type\": {\r\n          \"type\": \"string\",\r\n          \"default\": \"credit\"\r\n        },\r\n        \"ref\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"description\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"amount\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\"\r\n        },\r\n        \"TransfertoAccountId\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"dispute\": {\r\n          \"type\": \"string\",\r\n          \"default\": \"ok\"\r\n        },\r\n        \"balance\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\"\r\n        },\r\n        \"date\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        },\r\n        \"id\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        },\r\n        \"accountId\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        },\r\n        \"userId\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        }\r\n      }\r\n    },\r\n    \"$new_account\": {\r\n      \"properties\": {\r\n        \"accountNumber\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\"\r\n        },\r\n        \"sortCode\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"friendlyName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"type\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"balance\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\",\r\n          \"default\": 0\r\n        },\r\n        \"date\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        },\r\n        \"userId\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        }\r\n      }\r\n    },\r\n    \"account\": {\r\n      \"properties\": {\r\n        \"accountNumber\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\"\r\n        },\r\n        \"sortCode\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"friendlyName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"type\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"balance\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\",\r\n          \"default\": 0\r\n        },\r\n        \"date\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        },\r\n        \"id\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        },\r\n        \"userId\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        }\r\n      }\r\n    },\r\n    \"$new_address\": {\r\n      \"properties\": {\r\n        \"DateStart\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"DateEnd\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Address1\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Address2\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Town\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Country\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"PostcodeZIP\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"userId\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        }\r\n      }\r\n    },\r\n    \"address\": {\r\n      \"properties\": {\r\n        \"DateStart\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"DateEnd\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Address1\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Address2\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Town\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"Country\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"PostcodeZIP\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        },\r\n        \"userId\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        }\r\n      }\r\n    },\r\n    \"AccessToken\": {\r\n      \"required\": [\r\n        \"id\"\r\n      ],\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"ttl\": {\r\n          \"type\": \"number\",\r\n          \"description\": \"time to live in seconds (2 weeks by default)\",\r\n          \"format\": \"double\",\r\n          \"default\": 1209600\r\n        },\r\n        \"scopes\": {\r\n          \"type\": \"array\",\r\n          \"description\": \"Array of scopes granted to this access token.\",\r\n          \"items\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"created\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        },\r\n        \"userId\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        }\r\n      }\r\n    },\r\n    \"$new_user\": {\r\n      \"required\": [\r\n        \"email\"\r\n      ],\r\n      \"properties\": {\r\n        \"gender\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"dateOfBirth\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        },\r\n        \"title\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"firstName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"middleName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"lastName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"type\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"employmentStatus\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"maritalStatus\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"numDependants\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"residenceStatus\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"locked\": {\r\n          \"type\": \"boolean\",\r\n          \"default\": false\r\n        },\r\n        \"realm\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"username\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"email\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"emailVerified\": {\r\n          \"type\": \"boolean\"\r\n        }\r\n      }\r\n    },\r\n    \"user\": {\r\n      \"required\": [\r\n        \"email\"\r\n      ],\r\n      \"properties\": {\r\n        \"gender\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"dateOfBirth\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        },\r\n        \"title\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"firstName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"middleName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"lastName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"type\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"employmentStatus\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"maritalStatus\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"numDependants\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"residenceStatus\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"locked\": {\r\n          \"type\": \"boolean\",\r\n          \"default\": false\r\n        },\r\n        \"realm\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"username\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"email\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"emailVerified\": {\r\n          \"type\": \"boolean\"\r\n        },\r\n        \"id\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        }\r\n      }\r\n    },\r\n    \"$new_transaction\": {\r\n      \"required\": [\r\n        \"type\",\r\n        \"amount\",\r\n        \"dispute\"\r\n      ],\r\n      \"properties\": {\r\n        \"type\": {\r\n          \"type\": \"string\",\r\n          \"default\": \"credit\"\r\n        },\r\n        \"ref\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"description\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"amount\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\"\r\n        },\r\n        \"TransfertoAccountId\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"dispute\": {\r\n          \"type\": \"string\",\r\n          \"default\": \"ok\"\r\n        },\r\n        \"balance\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\"\r\n        },\r\n        \"date\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        },\r\n        \"accountId\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        },\r\n        \"userId\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        }\r\n      }\r\n    },\r\n    \"quote\": {\r\n      \"properties\": {\r\n        \"amount\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\"\r\n        },\r\n        \"term\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\"\r\n        },\r\n        \"income\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\"\r\n        },\r\n        \"age\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\"\r\n        },\r\n        \"accepted\": {\r\n          \"type\": \"boolean\"\r\n        },\r\n        \"rate\": {\r\n          \"type\": \"number\",\r\n          \"format\": \"double\"\r\n        },\r\n        \"date\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        },\r\n        \"email\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"$ref\": \"#/definitions/ObjectID\"\r\n        }\r\n      }\r\n    },\r\n    \"ObjectID\": {\r\n      \"type\": \"string\",\r\n      \"pattern\": \"^[a-fA-F\\\\d]{24}$\"\r\n    }\r\n  },\r\n  \"tags\": [\r\n    {\r\n      \"name\": \"account\"\r\n    },\r\n    {\r\n      \"name\": \"address\"\r\n    },\r\n    {\r\n      \"name\": \"user\"\r\n    },\r\n    {\r\n      \"name\": \"transaction\"\r\n    },\r\n    {\r\n      \"name\": \"quote\"\r\n    }\r\n  ],\r\n  \"protocol\": \"https\"\r\n}",
  "linkedResources": false,
  "version": 0
}